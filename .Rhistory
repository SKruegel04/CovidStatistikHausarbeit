installed.packages("ggplot2")
ggplot(data = df, mapping = aes())
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
huellen_farben <- data.frame(Farbe, Nennung)
huellen_farben
kable(huellen_farben)
library(knitr)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
huellen_farben <- data.frame(Farbe, Nennung)
huellen_farben
kable(huellen_farben)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
prop.table(Nennung)
Produktion <- prop.table(Nennung) * 1000000
library(ggplot2)
df <- data.frame(Nennung, Farbe)
installed.packages("ggplot2")
ggplot(data = df, mapping = aes())
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
knitr::opts_chunk$set(echo = TRUE)
testAfgaben <- matrix(c(75.09, 15.07, 66.59, 27.25), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
#kable(ausschlag)
assocstats(testAfgaben)
library(knitr)
betriebe_daten <- matrix(c(639,64,41,487,131,41,203,153,33,54,91,17,46,112,18),
nrow=5, ncol=3, byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000"),
c("Vollzeit", "Nebenerwerb", "Pacht")))
kable(betriebe_daten)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
betriebe_daten <- matrix(c(639,64,41,487,131,41,203,153,33,54,91,17,46,112,18),
nrow=5, ncol=3, byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000"),
c("Vollzeit", "Nebenerwerb", "Pacht")))
kable(betriebe_daten)
library(vcd)
installed.packages("vcd")
library(vcd)
installed.packages("vcd")
library(DescTools)
installed.packages("DescTools")
library(DescTools)
installed.packages("DescTools")
assocstats(betriebe_daten)
Phi(betriebe_daten)
ContCoef(betriebe_daten)
CramerV(betriebe_daten)
assocstats(betriebe_daten)
Phi(betriebe_daten)
ContCoef(betriebe_daten)
CramerV(betriebe_daten)
testAfgaben <- matrix(c(75.09, 15.07, 66.59, 27.25), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
#kable(ausschlag)
assocstats(testAfgaben)
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
remove.packages("htmltools")
install.packages("htmltools")
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
faithful
faithful[, "waiting"]
faithful[, "eruptions"]
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/MeineErsteShinyApp')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
huellen_farben <- data.frame(Farbe, Nennung)
huellen_farben
kable(huellen_farben)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
prop.table(Nennung)
Produktion <- prop.table(Nennung) * 1000000
library(ggplot2)
df <- data.frame(Nennung, Farbe)
installed.packages("ggplot2")
ggplot(data = df, mapping = aes())
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
prop.table(Nennung)
Produktion <- prop.table(Nennung) * 1000000
library(ggplot2)
df <- data.frame(Nennung, Farbe)
installed.packages("ggplot2")
ggplot(df)
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
prop.table(Nennung)
Produktion <- prop.table(Nennung) * 1000000
library(ggplot2)
df <- data.frame(Nennung, Farbe)
installed.packages("ggplot2")
Farbe <- c("hellweiß", "schwarzmetallic", "limette", "orange", "rot")
Nennung <- c(130, 104, 325, 455, 286)
prop.table(Nennung)
Produktion <- prop.table(Nennung) * 1000000
df <- data.frame(Nennung, Farbe)
installed.packages("ggplot2")
library(ggplot2)
getwd()
Data <- read.csv2("Applewood_2011.csv")
Data
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
prop.table(AnzahlKäufer)
RelativeHäufigkeit <- AbsoluteHäufigkeit / sum(AnzahlKäufer)
round(RelativeHäufigkeit, 3)
cumsum(AbsoluteHäufigkeit)
cumsum(RelativeHäufigkeit)
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
RelativeHäufigkeit <- AbsoluteHäufigkeit / sum(AnzahlKäufer)
round(RelativeHäufigkeit, 3)
cumsum(AbsoluteHäufigkeit)
cumsum(RelativeHäufigkeit)
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
RelativeHäufigkeit <- AbsoluteHäufigkeit / lenght(AnzahlKäufer)
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
RelativeHäufigkeit <- AbsoluteHäufigkeit / length(AnzahlKäufer)
round(RelativeHäufigkeit, 3)
cumsum(AbsoluteHäufigkeit)
cumsum(RelativeHäufigkeit)
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
length(AnzahlKäufer)
sum(AnzahlKäufer)
RelativeHäufigkeit <- AbsoluteHäufigkeit / length(AnzahlKäufer)
round(RelativeHäufigkeit, 3)
cumsum(AbsoluteHäufigkeit)
cumsum(RelativeHäufigkeit)
getwd()
Data <- read.csv2("Applewood_2011.csv")
AnzahlKäufer <- Data$Previous
AbsoluteHäufigkeit <- table(AnzahlKäufer)
AbsoluteHäufigkeit
RelativeHäufigkeit <- AbsoluteHäufigkeit / length(AnzahlKäufer)
round(RelativeHäufigkeit, 3)
cumsum(AbsoluteHäufigkeit)
cumsum(RelativeHäufigkeit)
Profit <- Data$Profit
hist(Profit)
hist(Profit, freq = FALSE)
hist(Profit, ylab = "absolute Häufigkeit", breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
hist(Profit, ylab = "absolute Häufigkeit", freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", ylim = c(0, 3300), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", ylim = c(0, 1), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", ylim = c(0, 2500), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", ylim = c(0, 2000), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
max(Profit)
hist(Profit, ylab = "absolute Häufigkeit", xlim = c(0, 3292), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
table(Profit)
hist(Profit, ylab = "absolute Häufigkeit", xlim = c(0, 2000), freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
hist(Profit, ylab = "absolute Häufigkeit", freq = TRUE, breaks = c(0, 250, 500, 1000, 1500, 2000, 2500, 3000, 3500))
bild <- png(filename = "bild_aufgabe3_5_neu.png")
bild
testAfgaben <- matrix(c(75.09, 15.07, 66.59, 27.25), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
#kable(ausschlag)
assocstats(testAfgaben)
Phi(ausschlag)
shiny::runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/MeineErsteShinyApp')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
shiny::runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
covidData$Landkreis == "Mitte"
covidData <- read.csv('C:/Users/irina/Documents/Studium/Statistik/RKI_COVID19_Berlin.csv')
covidData$Landkreis == "Mitte"
covidData$Landkreis == "SK Berlin Mitte"
covidData$Landkreis != "SK Berlin Mitte"
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
shiny::runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
covidData <- read.csv('C:/Users/irina/Documents/Studium/Statistik/RKI_COVID19_Berlin.csv')
bezirkTode <- bezirk[todesfall]
covidData
covidData
bezirk <- covidData$Landkreis
bezirkH <- table(bezirk)
mitte <- covidData$Landkreis == "SK Berlin Mitte"
todesfall <- covidData$AnzahlTodesfall != "0"
todesfall
bezirkTode <- bezirk[todesfall]
bezirkTode
table(bezirkTode)
sort(table(bezirkTode))
sort(bezirkH)
bezirkH
table(bezirkTode)
bezirkH
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
shiny::runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
runApp('Studium/Statistik/CovidData')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6")
bevölkerungsData[, 5]
sort(bezirkTodeH)
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6")
install.packages(“readxl“)
library (readxl)
library (readxl)
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6")
bevölkerungsData[, 5]
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsData[, 5]
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsData$2
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsData[(130:141), 2]
bevölkerungsData[(129:1140), 2]
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsData[(129:140), 2]
bevölkerungsData[(129:140), (1:2)]
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsData[(129:140), (1:2)]
bevölkerungsData[(129:140), 1,2]
alter <- covidData$Altersgruppe
bevölkerungsData[(129:140), 2]
befölkerungsgröße <- bevölkerungsData[(129:140), 2]
pnorm(befölkerungsgröße)
pnorm(befölkerungsgröße, bezirkH)
befölkerungsgröße
bezirkH
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölkerungsgröße <- bevölkerungsData[(129:140), 2]
pnorm(bevölkerungsgröße, bezirkH)
bevölkerungsgröße
cbind(bezirk, bevölkerungsgröße)
rbind(bezirk, bevölkerungsgröße)
bevölkerungsgröße
bezirkH
c(bezirkH)
größe <- c(bezirkH)
größe
cbind(bezirkH, bevölkerungsgröße)
prop.table(cbind(bezirkH, bevölkerungsgröße))
freq.rel(freq.absolut = bevölkerungsgröße, korp.groesse = bezirkH)
pnorm(bevölkerungsgröße, bezirkH)
cbind(bevölkerungsgröße, bezirkH)
prop.table(cbind(bevölkerungsgröße, bezirkH))
prop.table(cbind(bevölkerungsgröße$...2, bezirkH))
cbind(bevölkerungsgröße, bezirkH)
cbind(bevölkerungsgröße, bezirkH)
cbind(bezirkH, bevölkerungsgröße)
bezirkH/bevölkerungsgröße*100
bezirkH[, 2]
bezirk_anzahlFall <- c(27553, 29290, 22930, 22333, 17089, 27333, 22635, 25152, 25139, 23158, 25906, 17848)
bezirk_anzahlFall <- c(27553, 29290, 22930, 22333, 17089, 27333, 22635, 25152, 25139, 23158, 25906, 17848)
bezirk_anzahlFall/bevölkerungsgröße*100
bezirk_anzahlFall/bevölkerungsgröße
bevölkerungsgröße <- c(bevölkerungsData[(129:140), 2])
cbind(bezirkH, bevölkerungsgröße)
bezirkH/bevölkerungsgröße*100
bezirk_anzahlFall <- c(27553, 29290, 22930, 22333, 17089, 27333, 22635, 25152, 25139, 23158, 25906, 17848)
bezirk_anzahlFall/bevölkerungsgröße
cbind(bezirkH, bevölkerungsgröße)
cbind(bezirkH, bevölkerungsgröße)
bevölkerungsgröße <- bevölkerungsData[(129:140), 2]
cbind(bezirkH, bevölkerungsgröße)
27553/391831*100
round(27553/391831*100, 2)
round(29290/291851*100, 2)
round(27553/391831*100, 2)
round(29290/291851*100, 2)
round(22930/418249*100, 2)
round(22333/339405*100, 2)
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
bezirkH
bezirkGenesenH
genesen <- covidData$AnzahlGenesen > "0"
genesen_choice <- table(genesen)
geschlecht_genesen <- table(geschlecht[genesen])
geschlecht_genesen
tode <- covidData$AnzahlTodesfall
bezirkGenesen <- covidData$AnzahlGenesen > "0"
bezirkGenesenH <- table(bezirk[bezirkGenesen])
bezirkGenesenH
bezirkH < bezirkGenesenH
library (readxl)
bev <- read.csv("./RKI_COVID19_Berlin.csv")
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölk <- as.numeric(bevölkerungsData$...2[129:140])
bevölkerungsgröße <- bevölkerungsData[(129:140), 2]
bevölkerungsgröße
bevölk
anzahl_bezirke <- as.data.frame(cbind(bezirkH, bevölkerungsgröße))
anzahl_bezirke
bezirke_prop <- bezirkH/bevölk
sort(bezirke_prop)
barplot(sort(bezirke_prop))
bezirk_anzahlFall <- c(27553, 29290, 22930, 22333, 17089, 27333, 22635, 25152, 25139, 23158, 25906, 17848)
bezirk_anzahlFall/bevölkerungsgröße
bezirk_anzahlFall/bevölkerungsgröße
b
b
b
b
bevölkerungsData <- read_excel ("C:\\Users\\irina\\Documents\\Studium\\Statistik\\SB_A01-05-00_2022h01_BE.xlsx", sheet = "T6", na = "NA")
bevölk <- as.numeric(bevölkerungsData$...2[129:140])
bevölkerungsgröße <- bevölkerungsData[(129:140), 2]
bevölkerungsgröße
bevölk
anzahl_bezirke <- as.data.frame(cbind(bezirkH, bevölkerungsgröße))
anzahl_bezirke
bezirke_prop <- bezirkH/bevölk
sort(bezirke_prop)
barplot(sort(bezirke_prop))
bezirk_anzahlFall <- c(27553, 29290, 22930, 22333, 17089, 27333, 22635, 25152, 25139, 23158, 25906, 17848)
bezirk_anzahlFall/bevölkerungsgröße
bezirk_anzahlFall/bevölk
bezirkH/bevölk
bezirk_prop <- bezirk_anzahlFall/bevölk
genesen_prop <- bezirkH/bevölk
bezirk_prop > genesen_prop
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
setwd("~/")
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
shiny::runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
covidData <- read.csv('C:/Users/irina/Documents/Studium/Statistik/RKI_COVID19_Berlin.csv')
head(covidData)
head(covidData$Meldedatum)
sort(covidData$Meldedatum)
tail(sort(covidData$Meldedatum))
runApp('Studium/Statistik/CovidStatistikHausarbeit')
runApp('Studium/Statistik/CovidStatistikHausarbeit')
